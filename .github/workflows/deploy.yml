name: Angular GitHub CI/CD
on:
  push:
    branches:
      - master
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      # - name: Cache node modules
      #   id: cache-nodemodules
      #   uses: actions/cache@v2
      #   env:
      #     cache-name: cache-node-modules
      #   with:
      #     # caching node_modules
      #     path: node_modules
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-

      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: |
          npm ci

      - name: Build
        run: |
          npm run build:github

      - name: Lint
        run: |
          npm run lint

      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.TOKEN_GITHUB_ACTION }}
          output-file: "false"

      - name: Create Release
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "release.tar.gz,foo/*.txt"
          bodyFile: "body.md"
          token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Create Release
      #   uses: actions/create-release@v1
      #   if: ${{ steps.changelog.outputs.skipped == 'false' }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB_ACTION }}
      #   with:
      #     tag_name: ${{ steps.changelog.outputs.tag }}
      #     release_name: ${{ steps.changelog.outputs.tag }}
      #     body: ${{ steps.changelog.outputs.clean_changelog }}

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.2.3
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: dist/test-github-actions # The folder the action should deploy.
